// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProject;

#nullable disable

namespace TestProject.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestProject.Entities.PromotionLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PriorityWeight")
                        .HasColumnType("int");

                    b.Property<Guid>("SeniorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubscriptionOfferSheetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionOfferSheetId");

                    b.ToTable("PromotionLines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2986fc35-42b6-48e1-a511-ef2a9d758daa"),
                            Code = "6ARHEQ28Q7",
                            ConditionDescription = "IUXPI654C7ATDX1MSHNPJUL24",
                            Country = "79D3K6GDMS",
                            Created = new DateTimeOffset(new DateTime(2010, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            LastUpdated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "2XESDI7263Q706COTZRI0FSCD",
                            OfferId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PriorityWeight = 1,
                            SeniorityId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SubscriptionOfferSheetId = new Guid("caa7101c-47c3-481d-ad85-b1084ebefe8f")
                        },
                        new
                        {
                            Id = new Guid("8cfa7de2-7f78-4786-bbf7-9ca84dba0d7b"),
                            Code = "UBF2VM046W",
                            ConditionDescription = "QJH9HQA60GFTI382SL0PPELXF",
                            Country = "O7I8YDLIG7",
                            Created = new DateTimeOffset(new DateTime(2022, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            LastUpdated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "5BHGFP5PM702G0VX7XVV59D4A",
                            OfferId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PriorityWeight = 1,
                            SeniorityId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SubscriptionOfferSheetId = new Guid("caa7101c-47c3-481d-ad85-b1084ebefe8f")
                        },
                        new
                        {
                            Id = new Guid("5d8f24f7-aae3-4e7f-b9d2-9092d05fbc29"),
                            Code = "GBDZ31CC8L",
                            ConditionDescription = "OQMINY1KLST01PS1V3S8RO4YV",
                            Country = "DUJW3VVSFN",
                            Created = new DateTimeOffset(new DateTime(2020, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            LastUpdated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "LWU16WCM2JPYIL33RJ97JBAKM",
                            OfferId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PriorityWeight = 1,
                            SeniorityId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SubscriptionOfferSheetId = new Guid("c784ba51-c713-4eaa-b7ec-6cc890223c91")
                        },
                        new
                        {
                            Id = new Guid("2344d940-9739-47a8-aa7d-4612c5031c11"),
                            Code = "KAH2HKGTZ2",
                            ConditionDescription = "FPS97BWKFCVUOKMTKT1CK8VS7",
                            Country = "RN0TT9MJSB",
                            Created = new DateTimeOffset(new DateTime(2002, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            LastUpdated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "AYOZ8JD6QWWGNSKRRK2MLZYDR",
                            OfferId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PriorityWeight = 1,
                            SeniorityId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SubscriptionOfferSheetId = new Guid("caa7101c-47c3-481d-ad85-b1084ebefe8f")
                        },
                        new
                        {
                            Id = new Guid("95c6eacd-dd07-461d-b1d7-b61cf1adb113"),
                            Code = "U9JCC4402L",
                            ConditionDescription = "C1NM1B2Y3W6G5PETWCVYST1TV",
                            Country = "E2WGTQCGFG",
                            Created = new DateTimeOffset(new DateTime(2017, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            LastUpdated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "11B20MT2OCESLOMLGYPHSCFPU",
                            OfferId = new Guid("00000000-0000-0000-0000-000000000000"),
                            PriorityWeight = 1,
                            SeniorityId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SubscriptionOfferSheetId = new Guid("c784ba51-c713-4eaa-b7ec-6cc890223c91")
                        });
                });

            modelBuilder.Entity("TestProject.Entities.SubscriptionOfferSheet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("PublishDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionOfferSheets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("caa7101c-47c3-481d-ad85-b1084ebefe8f"),
                            Country = "UWW614P1AO",
                            Created = new DateTimeOffset(new DateTime(2016, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            CreationDate = new DateTimeOffset(new DateTime(2005, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "6HVUJYAWFPSIRIGOXBFMHG0XY",
                            LastUpdated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PublishDate = new DateTimeOffset(new DateTime(2003, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("c784ba51-c713-4eaa-b7ec-6cc890223c91"),
                            Country = "O0QJWNTA9R",
                            Created = new DateTimeOffset(new DateTime(2013, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            CreationDate = new DateTimeOffset(new DateTime(2011, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "HSWGGO7QOKHZ1OU73G0APMI98",
                            LastUpdated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            PublishDate = new DateTimeOffset(new DateTime(2004, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("TestProject.Entities.PromotionLine", b =>
                {
                    b.HasOne("TestProject.Entities.SubscriptionOfferSheet", null)
                        .WithMany("PromotionLines")
                        .HasForeignKey("SubscriptionOfferSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProject.Entities.SubscriptionOfferSheet", b =>
                {
                    b.Navigation("PromotionLines");
                });
#pragma warning restore 612, 618
        }
    }
}
